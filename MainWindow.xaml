<Window x:Class="Diamonds.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:ui="clr-namespace:Diamonds.UI"
        mc:Ignorable="d"
        WindowState="Maximized"
        WindowStyle="None"
        ResizeMode="NoResize"
        d:DesignHeight="1500" d:DesignWidth="1000"
        Title="MainWindow" Background="#ECDFCC">
    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="S"
            Command="{x:Static ApplicationCommands.Save}" />
    </Window.InputBindings>

    <Window.CommandBindings>
        <CommandBinding Command="Save" Executed="OnShortcutSave" />
    </Window.CommandBindings>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <!-- Left Side Menu Panel -->
        <Border Grid.Column="0" x:Name="SettingsMenu" Background="#DDDDDD" Width="250" Padding="10"
                BorderBrush="Gray" BorderThickness="1"
                Margin="5" CornerRadius="5">
            <StackPanel>
                <ui:Header 
                    HeaderText="Dimensions"
                    ButtonContent="↩"
                    ButtonClick="OnResetSizesButtonClicked" />

                <ui:IntPairPicker
                    x:Name="DiamondSizeInput"
                    Header="Diamond Size"
                    XLabel="Width"
                    YLabel="Height"
                    WidthMin="1" WidthMax="500"
                    HeightMin="1" HeightMax="400"
                    Unit="mm"
                    ValueChanged="OnSizePickerInputChanged"/>
                
                <ui:IntPairPicker
                    x:Name="GridSizeInput"
                    Header="Grid"
                    XLabel="Columns"
                    YLabel="Rows"
                    WidthMin="1" WidthMax="99"
                    HeightMin="1" HeightMax="99"
                    Unit=""
                    ValueChanged="OnSizePickerInputChanged"/>
                
                
                <TextBlock Text="Painting Margin Width (mm):" />
                <toolkit:IntegerUpDown x:Name="PaintingMarginInput" Text="20" Minimum="0" Maximum="99" Margin="0,0,0,10" />

                <TextBlock Text="Mounting Rim Width (mm):" />
                <toolkit:IntegerUpDown x:Name="MountingRimSizeInput" Text="30" Minimum="0" Margin="0,0,0,10" />

                <TextBlock Text="Offset X (mm):" />
                <toolkit:IntegerUpDown x:Name="OffsetXInput" Text="0" Margin="0,0,0,10" />

                <TextBlock Text="Offset Y (mm):" />
                <toolkit:IntegerUpDown x:Name="OffsetYInput" Text="0" Margin="0,0,0,10" />

                <ui:Header HeaderText="Colors"
                           ButtonContent="↩"
                           ButtonClick="OnResetColorsButtonClicked" />

                <TextBlock Text="Background Color:" />
                <toolkit:ColorPicker x:Name="BackgroundColorInput" />

                <TextBlock Text="Diamond Color:" />
                <toolkit:ColorPicker x:Name="DiamondColorInput" />

                <TextBlock Text="Outer Rim Color:" />
                <toolkit:ColorPicker x:Name="CanvasRimColorInput" />

                <TextBlock Text="Mounting Rim Color:" />
                <toolkit:ColorPicker x:Name="MountingRimColorInput" />

                <ui:Header HeaderText="Display"
                           IsButtonVisible="False" />

                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                    <TextBlock Text="Show Scales" Margin="0,0,10,0" />
                    <CheckBox x:Name="ShowScalesInput" IsChecked="True" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                    <TextBlock Text="Measure Only Painting" Margin="0,0,10,0" />
                    <CheckBox x:Name="OnlyPaintingInput" IsChecked="False" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                    <TextBlock Text="Show Debug Lines" Margin="0,0,10,0" />
                    <CheckBox x:Name="ShowDebugLinesInput" IsChecked="False" />
                </StackPanel>
                
                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                    <TextBlock Text="Show Frame" Margin="0,0,10,0" />
                    <CheckBox x:Name="ShowFrameInput" IsChecked="False" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                    <TextBlock Text="Exploded Frame View" Margin="0,0,10,0" />
                    <CheckBox x:Name="ShowExplodedFrameInput" IsChecked="False" />
                </StackPanel>

                <ui:Header HeaderText="Frame Dimensions"
                           ButtonContent="↩"
                           ButtonClick="OnResetFrameSizesButtonClicked" />
                
                <TextBlock Text="Structural Wiggle Room (mm):" />
                <toolkit:IntegerUpDown x:Name="WiggleRoomInput" Text="0" Minimum="0" Margin="0,0,0,10"
                                       ValueChanged="OnAnyFrameInputChanged"/>
                
                <TextBlock Text="Structural Layer Thickness (mm):" />
                <toolkit:IntegerUpDown x:Name="StructuralLayerSizeInput" Text="0" Minimum="0" Margin="0,0,0,10"
                                       ValueChanged="OnAnyFrameInputChanged" />

                <TextBlock Text="Decorative Layer 1 Thickness (mm):" />
                <toolkit:IntegerUpDown x:Name="DecorativeLayer1SizeInput" Text="0" Minimum="0" Margin="0,0,0,10"
                                       ValueChanged="OnAnyFrameInputChanged" />

                <TextBlock Text="Decorative Layer 2 Thickness (mm):" />
                <toolkit:IntegerUpDown x:Name="DecorativeLayer2SizeInput" Text="0" Minimum="0" Margin="0,0,0,10"
                                       ValueChanged="OnAnyFrameInputChanged" />

                <ui:Header HeaderText="Frame Colors"
                           ButtonContent="↩"
                           ButtonClick="OnResetFrameColorsButtonClicked" />
                
                <TextBlock Text="Structural Layer Color:" />
                <toolkit:ColorPicker x:Name="StructuralLayerColorInput" SelectedColorChanged="OnAnyFrameColorInputChanged"/>
                
                <TextBlock Text="Decorative Layer 1 Color:" />
                <toolkit:ColorPicker x:Name="DecorativeLayer1ColorInput" SelectedColorChanged="OnAnyFrameColorInputChanged" />
                
                <TextBlock Text="Decorative Layer 2 Color:" />
                <toolkit:ColorPicker x:Name="DecorativeLayer2ColorInput" SelectedColorChanged="OnAnyFrameColorInputChanged" />
                
            </StackPanel>
        </Border>

        <!-- Canvas -->
        <ScrollViewer Grid.Column="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Canvas Name="MainCanvas" Background="LightGray" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
        </ScrollViewer>

        <Border Grid.Column="2" Background="#DDDDDD" Width="250" Padding="10"
                BorderBrush="Gray" BorderThickness="1"
                Margin="5" CornerRadius="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" /> <!-- Header -->
                    <RowDefinition Height="Auto" /> <!-- Buttons -->
                    <RowDefinition Height="*" />    <!-- Spacer -->
                    <RowDefinition Height="Auto" /> <!-- Notification Label -->
                </Grid.RowDefinitions>

                <ui:Header HeaderText="File Operations"
                           ButtonContent="X"
                           ButtonClick="OnExitButtonClicked" />

                <StackPanel Grid.Row="1">
                    <Button Content="Save" Margin="0,10,0,0" Click="OnSaveButtonClicked" Padding="8 4" />
                    <Button Content="Export as .png" Margin="0,10,0,0" Click="OnPngButtonClicked" Padding="8 4" />
                    <Button Content="Load" Margin="0,10,0,0" Click="OnLoadButtonClicked" Padding="8 4" />
                </StackPanel>

                <Label Grid.Row="3" x:Name="NotificationBox" FontWeight="Bold" FontSize="12" />

            </Grid>
        </Border>
    </Grid>
</Window>